name: CMake

on:
  push:
    branches: [ "homework2" ]

  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure system
      run: |
        sudo apt-get install -y valgrind python3 pip
        pip install ValgrindCI
        git clone https://github.com/google/googletest ${{github.workspace}}/homework2/tests/googletest
    - name: Configure CMake
      working-directory: ${{github.workspace}}/homework2/
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/homework2/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/homework2/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/homework2/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: valgrind --tool=memcheck --xml=yes --xml-file=valgrind_out.xml ./tests/matrix_calc_test

    - name: Check valgrind
      working-directory: ${{github.workspace}}/homework2/build
      run: valgrind-ci valgrind_out.xml --number-of-errors --abort-on-errors 

  clang-format-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: RafikFarhad/clang-format-github-action@v2.1.0
        with:
          sources: "lib/*.h, lib/*.cpp,tests/*.cpp"

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure system
      run: |
        sudo apt-get install -y python3 pip
        sudo apt-get install -y cppcheck clang-tidy
        pip install cpplint
    - name: Run
      working-directory: ${{github.workspace}}/homework2/
      run: ./linters/run.sh